{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import openpyxl\n",
    "from scipy import stats\n",
    "from pathlib import Path"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "xlsx_file = Path('A.xlsx')\n",
    "wb_obj = openpyxl.load_workbook(xlsx_file)\n",
    "sheet = wb_obj.active"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<Worksheet \"Sheet1\">\n"
     ]
    }
   ],
   "source": [
    "print(sheet)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "68134\n"
     ]
    }
   ],
   "source": [
    "i = 2\n",
    "print(sheet[\"c\"+str(i)].value)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "RESULT= []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "for i in range(3 , 40):\n",
    "    j =i + 44\n",
    "    array1 = []\n",
    "    array2 = []\n",
    "    array1.append(float(sheet[\"E\"+str(i)].value))\n",
    "    array1.append(float(sheet[\"J\"+str(i)].value))\n",
    "    array1.append(float(sheet[\"O\"+str(i)].value))\n",
    "    array1.append(float(sheet[\"T\"+str(i)].value))\n",
    "    array1.append(float(sheet[\"Y\"+str(i)].value))\n",
    "    array1.append(float(sheet[\"AD\"+str(i)].value))\n",
    "    array2.append(float(sheet[\"E\"+str(j)].value))\n",
    "    array2.append(float(sheet[\"J\"+str(j)].value))\n",
    "    array2.append(float(sheet[\"O\"+str(j)].value))\n",
    "    array2.append(float(sheet[\"T\"+str(j)].value))\n",
    "    array2.append(float(sheet[\"Y\"+str(j)].value))\n",
    "    array2.append(float(sheet[\"AD\"+str(j)].value))\n",
    "    RESULT.append([stats.spearmanr(array1,[700,800,700,600,600,400]).correlation,stats.spearmanr(array1,[700,800,700,600,600,400]).pvalue,stats.spearmanr(array2,[900,800,800,1600,1000,1200]).correlation,stats.spearmanr(array2,[900,800,800,1600,1000,1200]).pvalue])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import csv\n",
    "from csv import writer\n",
    " \n",
    "wtr = csv.writer(open ('result.csv', 'wt'), delimiter=',')\n",
    "for x in RESULT : \n",
    "    wtr.writerow (x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
